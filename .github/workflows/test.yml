name: test

on:
  push:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    container: node:16.14-bullseye

    services:
      postgres:
        image: postgres:13.6
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: have_you_heard
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:6.2.6
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        npm install
        apt-get update
        apt-get install -y python3-yaml python3-websocket python3-socketio-client postgresql-client python3-socketio redis-tools

    - name: Populate DB
      env:
        PGUSER: postgres
        PGPASSWORD: postgres
        PGHOST: postgres
        PGDATABASE: have_you_heard
      run: |
        cd test
        echo -n ${PGPASSWORD} > ~/.pgpass
        psql -h ${PGHOST} -U ${PGUSER} -d ${PGDATABASE} -a -f init_db.sql
        cd ..

    - name: Start Server
      id: server
      env:
        REDIS_HOST: redis
        REDIS_PORT: 6379
        DATABASE_URL: "postgres://postgres:postgres@postgres:5432/have_you_heard"
      run: |
        mkdir -p /tmp/log
        touch .env
        echo REDIS_HOST=${REDIS_HOST} >> .env
        echo REDIS_PORT=${REDIS_PORT} >> .env
        echo DATABASE_URL=${DATABASE_URL} >> .env
        DEBUG=have_you_heard node src 2>/tmp/log/error.log >/tmp/log/server.log &
        sleep 2

    - name: Run sanity random test
      id: random
      run: timeout 5m python3 test/auto_player.py -v -s http://localhost:3000 -r

    - name: Upload random games
      uses: actions/upload-artifact@v3
      with:
        name: games
        path: random_game*.yml

    - name: Run tests
      id: tests
      run: timeout 5m python3 test/auto_player.py -v -s http://localhost:3000 -t

    - name: Debug Job failure
      if: always() && (steps.server.outcome == 'failure' ||
                       steps.random.outcome == 'failure'  ||
                       steps.tests.outcome == 'failure')
      run: |
        echo "******** Server stderr ********"
        cat /tmp/log/error.log
        echo "******** Server stdout ********"
        cat /tmp/log/server.log

    - name: Upload logs
      uses: actions/upload-artifact@v3
      with:
        name: logs
        path: /tmp/log/*.log
